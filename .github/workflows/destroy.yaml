name: Destroy (Warning)

on:
  workflow_dispatch:
    inputs:
      inputEnv:
        description: 'Environment (sandbox)'
        required: true
        type: choice
        default: 'sandbox'
        options:
          - sandbox

defaults:
  run:
    shell: bash

jobs:
  select-env:
    runs-on: [ ci ]
    steps:
      id: set-env
      run: |
        env_name=${{ github.event.inputs.inputEnv }}
        if [ "$env_name""== "sandbox" ]; then
          echo "Environment to Sandbox"
          echo "::set-output name=runner::deployer-sandbox"
          echo "::set-output name=name::SANDBOX"
          echo "::set-output name=aws::sandbox"
        fi
    outputs:
      runner: ${{ steps.set-env.outputs.runner }}
      name: ${{ steps.set-env.outputs.name }}
      aws: ${{ steps.set-env.outputs.aws }}

destroy:
  needs: select-env
  runs-on: ${{ needs.select-env.outputs.runner }}
  name: "Destroy ${{ needs.select-env.outputs.name }}"
  outputs:
    runner: ${{ steps.select.outputs.runner }}
  steps:
    -name: env
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
        AWS_ACCOUNT: ${{ needs.select-env.outputs.aws }}
      run: echo "$GITHUB_CONTEXT"
    
    - uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: synced-actions/configure-aws-credentials@v1
      with:
        aws-region: us-east-1
        role-to-assume: deployer-prod-us-east-1
        role-skip-session-tagging: true
        role-duration-seconds: 1200
    
    - name: Setup Python
      uses: action/setup-python@v2
      with:
        python-version: '3.9.6'
    
    -name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: '14.18.0'
      
    - name: Install dependencies
      working-directory: ./
      shell: bash
      run: |
        npm i -g aws-cdk
        python3 -m venv .env
        source .env/bin/activate
        python -m pip install --upgrade pip
        pip install wheel
        pip install -r requirements.txt

    - name: CDK Destroy
      working-directory: ./
      shell: bash
      run: |
        source .env/bin/activate
        cdk destroy --force --require-approval=never
